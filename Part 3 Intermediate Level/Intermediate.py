
# =====================================
# Intermediate Level: Deeper Python Concepts
# =====================================

# 9. String Manipulation
# Theory: Strings can be sliced and formatted.
# ЁЯЗзЁЯЗй рж╕рзНржЯрзНрж░рж┐ржВ ржХрзЗржЯрзЗ, ржпрзЛржЧ ржХрж░рзЗ ржмрж╛ ржкрж░рж┐ржмрж░рзНрждржи ржХрж░рзЗ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ ржпрж╛ржпрж╝ред

text = "Hello World"
print(text.upper())
print(text[0:5])
print("world" in text)
print(text.replace("World", "Python"))


# 10. File Handling
# Theory: Reading and writing files.
# ЁЯЗзЁЯЗй ржлрж╛ржЗрж▓ ржерзЗржХрзЗ ржкржбрж╝рж╛ ржУ рж▓рзЗржЦрж╛ ржХрж░рж╛рж░ ржЬржирзНржп open() ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ рж╣ржпрж╝ред

with open("data.txt", "w") as file:
    file.write("Hello, Python!")

with open("data.txt", "r") as file:
    print(file.read())


# 11. Exception Handling
# Theory: Catch and handle runtime errors.
# ЁЯЗзЁЯЗй ржнрзБрж▓ ржзрж░рждрзЗ try-except ржмрзНрж▓ржХ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ рж╣ржпрж╝ред

try:
    result = 10 / 0
except ZeroDivisionError:
    print("Cannot divide by zero!")


# 12. Modules and Packages
# Theory: Code organization using modules.
# ЁЯЗзЁЯЗй Modules рж╣рж▓рзЛ ржПржХржХ Python ржлрж╛ржЗрж▓, Packages рж╣рж▓рзЛ ржоржбрж┐ржЙрж▓ рж╕ржорж╖рзНржЯрж┐ред

import math
print(math.sqrt(16))


# 13. OOP тАУ Classes and Objects
# Theory: Real-world modeling using classes.
# ЁЯЗзЁЯЗй OOP ржжрж┐ржпрж╝рзЗ ржмрж╛рж╕рзНрждржм ржЬрж┐ржирж┐рж╕ржХрзЗ ржкрзНрж░рзЛржЧрзНрж░рж╛ржорзЗ ржЙржкрж╕рзНржерж╛ржкржи ржХрж░рж╛ ржпрж╛ржпрж╝ред

class Person:
    def __init__(self, name):
        self.name = name

    def greet(self):
        return f"Hello, I am {self.name}"

p = Person("Noman")
print(p.greet())


# 14. Standard Libraries
# Theory: Python has powerful built-in libraries.
# ЁЯЗзЁЯЗй Python-ржПрж░ ржирж┐ржЬрж╕рзНржм ржЕржирзЗржХ ржжрж░ржХрж╛рж░рж┐ рж▓рж╛ржЗржмрзНрж░рзЗрж░рж┐ ржЖржЫрзЗред

import random
print(random.randint(1, 10))
